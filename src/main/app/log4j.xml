<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <http:listener-config name="log4j-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="log4j-config" raml="log4j.raml" consoleEnabled="false" doc:name="Router"/>
    <flow name="log4j-main">
        <http:listener config-ref="log4j-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="log4j-config" doc:name="APIkit Router"/>
        <exception-strategy ref="log4j-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="log4j-console">
        <http:listener config-ref="log4j-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="log4j-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="post:/test:log4j-config">
        <logger level="INFO" doc:name="Logger"/>
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>

		<scripting:component doc:name="sets eai Record Descriptor">
		    <scripting:script engine="Groovy"><![CDATA[import org.apache.commons.logging.Log; 
import org.apache.commons.logging.LogFactory; 
 
Log logger = LogFactory.getLog('CATEGORY--01'); 
logger.info("Inside the Proxy-Validation flow") ;

log.info('hello world!');
println "hello " + message.getInboundProperty('http.query.params').eai
println "hello2 " + message.getInboundProperty('x-eai-log-rec-descriptor');

flowVars['yourVarsName'] = "xxxx";

println "flow var=" + flowVars['yourVarsName'];

if (message.getInboundProperty('x-eai-log-rec-descriptor')) {
	org.apache.log4j.MDC.put('eaiConversationId',message.getInboundProperty('x-eai-log-rec-descriptor'));
}
else {
	org.apache.log4j.MDC.put('eaiConversationId',UUID.randomUUID().toString().replaceAll("-",""));
}


if (flowVars['log_Subject']) {
	org.apache.log4j.MDC.put('eaiRecordDescriptor',flowVars['log_Subject']);
}
else {
	org.apache.log4j.MDC.put('eaiRecordDescriptor','No Log Subject');
}



//org.apache.log4j.MDC.put('eaiRecordDescriptor','Order Id '+123);
]]></scripting:script>
		</scripting:component>

        <logger message="hello there" level="INFO" doc:name="Logger"/>
        <logger message="logger with category #[message.payloadAs(java.lang.String)]" level="INFO" category="CATEGORY-001" doc:name="Logger"/>
        <logger message="Error logger with category #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>

        
        <set-payload value="{ &quot;message&quot; : &quot;success&quot;}" doc:name="Set Payload"/>
    </flow>
    <apikit:mapping-exception-strategy name="log4j-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
